 bool isvalid(int i,int j,int n,int m,vector<vector<int>>& image,int color,int newcolor)
    {
        if(i>=0&&i<n&&j>=0&&j<m&&image[i][j]==newcolor)
        {
            return true;
        }
        return false;
    }
    void dfs(int i,int j,int n,int m,vector<vector<int>>& image,int color,int newcolor)
    {
        image[i][j]=color;
        if(isvalid(i+1,j,n,m,image,color,newcolor))
           dfs(i+1,j,n,m,image,color,newcolor);
        if(isvalid(i-1,j,n,m,image,color,newcolor))
           dfs(i-1,j,n,m,image,color,newcolor);
        if(isvalid(i,j+1,n,m,image,color,newcolor))
           dfs(i,j+1,n,m,image,color,newcolor);
        if(isvalid(i,j-1,n,m,image,color,newcolor))
           dfs(i,j-1,n,m,image,color,newcolor);
    }
    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int color) 
    {
        int n=image.size();
        int m=image[0].size();
        vector<int>adj[n];
        int newcolor=image[sr][sc];
        if(newcolor==color)
        {
            return image;
        }
        else
        {
            dfs(sr,sc,n,m,image,color,newcolor);
        }
        return image;
    }
