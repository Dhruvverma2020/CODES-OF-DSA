#include<bits/stdc++.h>
using namespace std;
void intersection(int a[],int b[],int m,int n)
{
    int i=0;
    int j=0;
    while(i<m&&j<n)
    {
        if(i>0&&a[i-1]==a[i])
        {
            i++;
            continue;
        }
        if(j>0&&b[j-1]==b[j])
        {
             j++;
            continue;
        }
        if(a[i]<b[j])
        {
            i++;
        }
        else if(a[i]>b[j])
        {
            j++;
        }
        else if(a[i]==b[j])
        {
            cout<<a[i]<<" ";
            i++;
            j++;
        }
    }
}
void unionarrays(int a[],int b[],int m,int n)
{
    int i=0,j=0;
    while(i<m&&j<n)
    {
        if(i>0&&a[i-1]==a[i])
        {
            i++;
            continue;
        }
        if(j>0&&a[j-1]==a[j])
        {
            j++;
            continue;
        }
        if(a[i]<b[j])
        {
            cout<<a[i]<<" ";
            i++;
        }
        else if(a[i]>b[j])
        {
            cout<<b[j]<<" ";
            j++;
        }
        else if(a[i]==b[j])
        {
            cout<<a[i]<<" ";
            i++;
            j++;
        }
    }
    while(i<m)
    {
       if(i==0||a[i]!=a[i-1])
        {
           cout<<a[i]<<" ";
           i++;
        } 
    }
    while(j<n)
    {
       if(j==0||b[j]!=b[j-1])
        {
           cout<<b[j]<<" ";
           j++;
        } 
    }
}
int main()
{
    int a[]={5,5,10,10,10};
    int b[]={1,5,10,20,30};
    int m=5;
    int n=5;
    //intersection(a,b,m,n);
    unionarrays(a,b,m,n);
}
