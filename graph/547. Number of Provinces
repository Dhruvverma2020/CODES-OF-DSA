 void dfsrec(vector<vector<int>>& isConnected,int s,bool visited[],int n)
    {
        visited[s]=true;
        vector<int>adj;
        for(int i=0; i<n; i++ )
        {
            int x =  isConnected[s][i]; 
            if(x == 1)
                adj.push_back(i);
        }
        for(int v:adj)
        {
            if(visited[v]==false)
            {
                dfsrec(isConnected,v,visited,n);
            }
        }
      
    }
    int findCircleNum(vector<vector<int>>& isConnected) 
    {
        int count=0;
        int n=isConnected.size();
        
        bool visited[n];
        for(int i=0;i<n;i++)
        {
            visited[i]=false;
        }
        for(int i=0;i<n;i++)
        {
            if(visited[i]==false)
            {
                count++;
                dfsrec(isConnected,i,visited,n);
            }
        }
        return count;
    }
};
