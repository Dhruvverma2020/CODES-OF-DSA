#include<bits/stdc++.h>
using namespace std;
vector<int>ans;
void addedge(vector<int>adj[],int u,int v)
{
    adj[u].push_back(v);
    adj[v].push_back(u);
}
void printgraph(vector<int>adj[],int v)
{
    for(int i=0;i<v;i++)
    {
        for(int x:adj[i])
        {
            cout<<x<<" ";
        }
        cout<<endl;
    }
}
 void bfsrec(vector<int>adj[],int s,bool visited[])
    {
        visited[s]=true;
        queue<int>q;
        q.push(s);
        while(q.empty()==false)
        {
            int u=q.front();
            q.pop();
            cout<<u<<" ";
            for(int v:adj[u])
            {
                if(visited[v]==false)
                {
                    visited[v]=true;
                    q.push(v);
                }
            }
        }
    }
    void bfsOfGraph(int v, vector<int> adj[]) 
    {
       bool visited[v+1];
        for(int i=0;i<v;i++)
        {
            visited[i]=false;
        }
        for(int i=0;i<v;i++)
        {
            if(visited[i]==false)
            {
                bfsrec(adj,i,visited);
            }
        }
    }
int main()
{
    int v=5;
    vector<int>adj[v];
    addedge(adj,0,1);
    addedge(adj,0,2);
    addedge(adj,1,2);
    addedge(adj,2,3);
    printgraph(adj,v);
    cout<<endl;
    bfsOfGraph(v,adj);
    return 0;
}
