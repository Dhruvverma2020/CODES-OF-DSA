#include<bits/stdc++.h>
using namespace std;
struct node
{
    int data;
    node*next;
    node*prev;
    node(int x)
    {
        data=x;
        next=NULL;
        prev=NULL;
    }
};
void print(node*head)
{
    node*curr=head;
    while(curr!=NULL)
    {
        cout<<curr->data<<" ";
        curr=curr->next;
    }
}
node*insertatstart(node*head,int x)
{
    node*temp=new node(x);
    temp->next=head;
    if(head!=NULL)
    {
        head->prev=temp;
    }
    return temp;
}
node*insertatend(node*head,int x)
{
    node*temp=new node(x);
    if(head==NULL)
    {
        return temp;
    }
    node*curr=head;
    while(curr->next!=NULL)
    {
        curr=curr->next;
    }
    curr->next=temp;
    temp->prev=curr;
    return head;
}
node*reverselinkedlist(node*head)
{
    node*curr=head;
    node*temp;
    while(curr!=NULL)
    {
        temp=curr->prev;
        curr->prev=curr->next;
        curr->next=temp;
        curr=curr->prev;
    }
    return temp->prev;
}
node*deletionhead(node*head)
{
   if(head==NULL)
   {
       return NULL;
   }
   if(head->next==NULL)
   {
       delete head;
       return NULL;
   }
   else
   {
       node*temp=head;
       head=head->next;
       head->prev=NULL;
       delete temp;
       return head;
   }
}
int main()
{
    node*head=new node(10);
    node*temp1=new node(20);
    node*temp2=new node(30);
    head->next=temp1;
    temp1->prev=head;
    temp1->next=temp2;
    temp2->prev=temp1;
    print(head);
    cout<<endl;
    head=insertatstart(head,5);
    print(head);
    cout<<endl;
    head=insertatend(head,40);
    print(head);
    cout<<endl;
    //head=reverselinkedlist(head);
    head=deletionhead(head);
    print(head);
    
}
