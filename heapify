#include <iostream>
#include<bits/stdc++.h>
using namespace std;
class minheap
{
  int *arr;
  int size;
  int cap;
  public:
  minheap(int c)
  {
      arr=new int[c];
      cap=c;
      size=0;
  }
  int left(int i)
  {
      return 2*i+1;
  }
  int right(int i)
  {
      return 2*i+2;
  }
  int parent(int i)
  {
      return (i-1)/2;
  }
  void insert(int x)
  {
      if(size==cap)
      {
          return;
      }
      size++;
      arr[size-1]=x;
      for(int i=size-1;i!=0&&arr[parent(i)]>arr[i];)
      {
          swap(arr[i],arr[parent(i)]);
          i=parent(i);
      }
  }
  void minheapify(int i)
  {
      int li=left(i);
      int ri=right(i);
      int smallest=i;
      if(li<size&&arr[li]<arr[smallest])
      smallest=li;
      if(ri<size&&arr[ri]<arr[smallest])
      smallest=ri;
      if(smallest!=i)
      {
          swap(arr[i],arr[smallest]);
          minheapify(smallest);
      }
  }
};
int main()
{
    minheap h(11);
  h.insert(3);
  h.insert(2);
  h.insert(15);
  h.insert(20);
    return 0;
}
