#include<bits/stdc++.h>
using namespace std;
void addedge(vector<int>adj[],int u,int v)
{
    adj[u].push_back(v);
    adj[v].push_back(u);
}
void printgraph(vector<int>adj[],int v)
{
    for(int i=0;i<v;i++)
    {
        for(int x:adj[i])
        {
            cout<<x<<" ";
        }
        cout<<endl;
    }
}
void dfsrec(vector<int>adj[],int s,bool visited[])
{
    visited[s]=true;
    
    
    for(int u:adj[s])
    {
        if(visited[u]==false)
            dfsrec(adj,u,visited);
    }
}
int dfs(vector<int>adj[],int v,int s)
{
    bool visited[v];
    int count=0;
    for(int i=0;i<v;i++)
        visited[i]=false;
    for(int i=0;i<v;i++)
    if(visited[i]==false)
    {
      dfsrec(adj,s,visited);
      count++;
    }
    return count;
}
/*void dfsrec(vector<int>adj[],int s,vector<bool>visited)
{
    visited[s]=true;
    cout<<s<<" ";
    for(int u:adj[s])
      if(visited[u]==false)
      dfsrec(adj,u,visited);
}*/
/*void dfs(vector<int>adj[],int v,int s)
{
    vector<bool>visited(v,false);
    for(int i=0;i<v;i++)
    {
        if(visited[i]==false);
        dfsrec(adj,s,visited);
    }
}*/
int main()
{
    int v=5;
    vector<int>adj[v];
    addedge(adj,0,1);
    addedge(adj,0,2);
    addedge(adj,2,3);
    addedge(adj,1,3);
    addedge(adj,1,4);
    addedge(adj,3,4);
    printgraph(adj,v);
    cout<<"following is the depthfirst traversal"<<endl;
    cout<<dfs(adj,v,0);
}
