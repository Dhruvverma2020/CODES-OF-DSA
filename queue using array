#include <iostream>
#include<bits/stdc++.h>
using namespace std;
struct Queue{
    int front,rear,cap,size;
    int *arr;
    Queue(int c)
    {
        front=rear=0;
        size=0;
        cap=c;
        arr=new int[cap];
    }
    bool isfull()
    {
        return(size==cap);
    }
    bool isempty()
    {
        return(size==0);
    }
    void enqueue(int x)
    {
        if(isfull())
        return;
        arr[size]=x;
        size++;
    }
    int deque()
    {
        if(isempty())
        return -1;
        int x=arr[0];
        for(int i=0;i<size-1;i++)
        {
            arr[i]=arr[i+1];
        }
        size--;
        return x;
    }
    int getfront()
    {
        if(isempty())
        return -1;
        else
        return arr[0];
    }
    int getrear()
    {
        if(isempty())
        {
            return -1;
        }
        else
        {
            return arr[size-1];
        }
    }
};
int main()
{
    Queue q(5);
    q.enqueue(5);
    q.enqueue(10);
    q.enqueue(20);
    q.enqueue(30);
    cout<<q.deque()<<" ";
    cout<<q.getrear()<<" ";
    cout<<q.getfront()<<" ";
    q.enqueue(45);
    cout<<q.getrear()<<" ";

    return 0;
}
