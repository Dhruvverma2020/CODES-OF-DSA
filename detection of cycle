#include<bits/stdc++.h>
using namespace std;
void addedge(vector<int>adj[],int u,int v)
{
    adj[u].push_back(v);
    adj[v].push_back(u);
}
void printgraph(vector<int>adj[],int v)
{
    for(int i=0;i<v;i++)
    {
        for(int x:adj[i])
        {
            cout<<x<<" ";
        }
        cout<<endl;
    }
}
bool dfsrec(vector<int>adj[],int s,bool visited[],int parent)
{
    visited[s]=true;
    for(int u:adj[s])
    {
        if(visited[u]==false)
        {
            if(dfsrec(adj,u,visited,s)==true)
            {
              return true;
            }
        }
        else if(u!=parent)
       {
        return true;
       }
       
    }
    return false;
}
bool dfs(vector<int>adj[],int v)
{
    bool visited[v];
    for(int i=0;i<v;i++)
    visited[i]=false;
    
    
    for(int i=0;i<v;i++)
    {
        if(visited[i]==false)
            if(dfsrec(adj,i,visited,-1)==true)
                return true;
    }
    return false;
}
int main()
{
    int v=6;
	vector<int> adj[v];
	addedge(adj,0,1); 
	addedge(adj,1,2); 
	addedge(adj,2,4); 
	addedge(adj,4,5); 
	addedge(adj,1,3);
	addedge(adj,2,3);

	if(dfs(adj,v))
	    cout<<"Cycle found";
	else
	    cout<<"No cycle found";

}
